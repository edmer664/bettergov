name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  build_image:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # The image is not pushed anywhere at the moment but serves the following purposes:
      # (a) performs the npm run build when building the image, and
      # (b) acts as a placeholder if we want to deploy as a container in the future.
      - name: Build the image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          build-args: |
            HEAD_COMMIT_HASH=${{ github.sha }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/bettergov:${{github.sha}}
            ghcr.io/${{ github.repository_owner }}/bettergov:latest

  lint_checks:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npx prettier --check .

  e2e_tests:
    name: Playwright Tests (Shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }})
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-noble
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install dependencies
        run: npm ci

      - name: Run E2E Tests
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        id: test-run

      - name: Check blob report exists
        if: ${{ !cancelled() }}
        run: |
          if [ -d "blob-report" ] && [ "$(ls -A blob-report)" ]; then
            echo "Blob report generated successfully"
          else
            echo "Warning: No blob report generated for shard ${{ matrix.shardIndex }}"
            mkdir -p blob-report
            echo "{\"shard\": ${{ matrix.shardIndex }}, \"status\": \"no-tests\"}" > blob-report/shard-info.json
          fi

      - name: Upload blob report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report/
          retention-days: 30

  merge_reports:
    name: Merge Playwright Reports
    needs: [e2e_tests]
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install Playwright dependencies only
        run: npm install @playwright/test

      - name: Download all blob reports
        uses: actions/download-artifact@v4
        with:
          path: all-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: List downloaded reports for debugging
        run: ls -la all-reports/ || echo "No reports directory found"

      - name: Merge Playwright reports
        run: |
          if [ -d "all-reports" ] && [ "$(ls -A all-reports)" ]; then
            npx playwright merge-reports --reporter html ./all-reports
          else
            echo "Warning: No blob reports found to merge"
            mkdir -p playwright-report
            echo "<html><body><h1>No test reports available</h1></body></html>" > playwright-report/index.html
          fi

      - name: Upload merged Playwright report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
